{"version":3,"sources":["globalEvalStyles.js"],"names":["globalEvalStyles","text","appendFn","style","document","createElement","innerHTML","head","appendChild","href","defaultFn","link","rel","runStyle","callback","nextTick","tagName","element","styles","querySelectorAll","length","loadCount","i"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAQMA,gB;;;;;;;uBAQMC,I,EAAMC,Q,EAAU;AAC1B,QAAMC,QAAQC,SAASC,aAAT,CAAuB,OAAvB,CAAd;AACAF,UAAMG,SAAN,GAAkBL,IAAlB;AACA,QAAIC,QAAJ,EAAc;AACbA,cAASC,KAAT;AACA,KAFD,MAEO;AACNC,cAASG,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;AACA;AACD,WAAOA,KAAP;AACA;;;2BAWcM,I,EAAMC,S,EAAWR,Q,EAAU;AACzC,QAAMS,OAAOP,SAASC,aAAT,CAAuB,MAAvB,CAAb;AACAM,SAAKC,GAAL,GAAW,YAAX;AACAD,SAAKF,IAAL,GAAYA,IAAZ;AACAT,qBAAiBa,QAAjB,CAA0BF,IAA1B,EAAgCD,SAAhC,EAA2CR,QAA3C;AACA,WAAOS,IAAP;AACA;;;4BAWeR,K,EAAOO,S,EAAWR,Q,EAAU;AAC3C,QAAMY,WAAW,SAAXA,QAAW,GAAW;AAC3BJ,kBAAaA,WAAb;AACA,KAFD;AAGA,QACCP,MAAMS,GAAN,IACAT,MAAMS,GAAN,KAAc,YADd,IAEAT,MAAMS,GAAN,KAAc,WAFd,IAGAT,MAAMS,GAAN,KAAc,WAJf,EAKE;AACD,kBAAMG,QAAN,CAAeD,QAAf;AACA;AACA;;AAED,QACCX,MAAMa,OAAN,KAAkB,OAAlB,IACAb,MAAMS,GAAN,KAAc,WADd,IAEAT,MAAMS,GAAN,KAAc,WAHf,EAIE;AACD,kBAAMG,QAAN,CAAeD,QAAf;AACA,KAND,MAMO;AACN,oBAAKX,KAAL,EAAY,MAAZ,EAAoBW,QAApB;AACA,oBAAKX,KAAL,EAAY,OAAZ,EAAqBW,QAArB;AACA;;AAED,QAAIZ,QAAJ,EAAc;AACbA,cAASC,KAAT;AACA,KAFD,MAEO;AACNC,cAASG,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;AACA;;AAED,WAAOA,KAAP;AACA;;;sCAUyBc,O,EAASP,S,EAAWR,Q,EAAU;AACvD,QAAMgB,SAASD,QAAQE,gBAAR,CAAyB,YAAzB,CAAf;AACA,QAAID,OAAOE,MAAP,KAAkB,CAAlB,IAAuBV,SAA3B,EAAsC;AACrC,kBAAMK,QAAN,CAAeL,SAAf;AACA;AACA;;AAED,QAAIW,YAAY,CAAhB;AACA,QAAMP,WAAW,SAAXA,QAAW,GAAW;AAC3B,SAAIJ,aAAa,EAAEW,SAAF,KAAgBH,OAAOE,MAAxC,EAAgD;AAC/C,mBAAML,QAAN,CAAeL,SAAf;AACA;AACD,KAJD;AAKA,SAAK,IAAIY,IAAI,CAAb,EAAgBA,IAAIJ,OAAOE,MAA3B,EAAmCE,GAAnC,EAAwC;AACvCtB,sBAAiBa,QAAjB,CAA0BK,OAAOI,CAAP,CAA1B,EAAqCR,QAArC,EAA+CZ,QAA/C;AACA;AACD;;;;;;mBAGaF,gB","file":"node_modules/metal-dom/src/globalEvalStyles.js","sourcesContent":["'use strict';\n\nimport {async} from 'metal';\nimport {once} from './dom';\n\n/**\n * Utility functions for running styles.\n */\nclass globalEvalStyles {\n\t/**\n\t * Evaluates the given style.\n\t * @param {string} text\n\t * @param {function()=} appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} style\n\t */\n\tstatic run(text, appendFn) {\n\t\tconst style = document.createElement('style');\n\t\tstyle.innerHTML = text;\n\t\tif (appendFn) {\n\t\t\tappendFn(style);\n\t\t} else {\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\t\treturn style;\n\t}\n\n\t/**\n\t * Evaluates the given style file.\n\t * @param {string} href The file's path.\n\t * @param {function()=} defaultFn Optional function to be called\n\t *   when the styles has been run.\n\t * @param {function()=} appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} style\n\t */\n\tstatic runFile(href, defaultFn, appendFn) {\n\t\tconst link = document.createElement('link');\n\t\tlink.rel = 'stylesheet';\n\t\tlink.href = href;\n\t\tglobalEvalStyles.runStyle(link, defaultFn, appendFn);\n\t\treturn link;\n\t}\n\n\t/**\n\t * Evaluates the code referenced by the given style/link element.\n\t * @param {!Element} style\n\t * @param {function()=} defaultFn Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} appendFn Optional function to append the node\n\t *   into document.\n\t *  @return {Element} style\n\t */\n\tstatic runStyle(style, defaultFn, appendFn) {\n\t\tconst callback = function() {\n\t\t\tdefaultFn && defaultFn();\n\t\t};\n\t\tif (\n\t\t\tstyle.rel &&\n\t\t\tstyle.rel !== 'stylesheet' &&\n\t\t\tstyle.rel !== 'canonical' &&\n\t\t\tstyle.rel !== 'alternate'\n\t\t) {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tstyle.tagName === 'STYLE' ||\n\t\t\tstyle.rel === 'canonical' ||\n\t\t\tstyle.rel === 'alternate'\n\t\t) {\n\t\t\tasync.nextTick(callback);\n\t\t} else {\n\t\t\tonce(style, 'load', callback);\n\t\t\tonce(style, 'error', callback);\n\t\t}\n\n\t\tif (appendFn) {\n\t\t\tappendFn(style);\n\t\t} else {\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\n\t\treturn style;\n\t}\n\n\t/**\n\t * Evaluates any style present in the given element.\n\t * @param {!Element} element\n\t * @param {function()=} defaultFn Optional function to be called when the\n\t *   style has been run.\n\t * @param {function()=} appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runStylesInElement(element, defaultFn, appendFn) {\n\t\tconst styles = element.querySelectorAll('style,link');\n\t\tif (styles.length === 0 && defaultFn) {\n\t\t\tasync.nextTick(defaultFn);\n\t\t\treturn;\n\t\t}\n\n\t\tlet loadCount = 0;\n\t\tconst callback = function() {\n\t\t\tif (defaultFn && ++loadCount === styles.length) {\n\t\t\t\tasync.nextTick(defaultFn);\n\t\t\t}\n\t\t};\n\t\tfor (let i = 0; i < styles.length; i++) {\n\t\t\tglobalEvalStyles.runStyle(styles[i], callback, appendFn);\n\t\t}\n\t}\n}\n\nexport default globalEvalStyles;\n"],"sourceRoot":"/source/"}