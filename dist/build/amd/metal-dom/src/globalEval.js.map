{"version":3,"sources":["globalEval.js"],"names":["globalEval","text","appendFn","script","document","createElement","head","appendChild","src","defaultFn","callback","type","nextTick","runFile","run","element","scripts","querySelectorAll","length","runScriptsInOrder","index","runScript","item"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAQMA,U;;;;;;;uBAQMC,I,EAAMC,Q,EAAU;AAC1B,QAAMC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAF,WAAOF,IAAP,GAAcA,IAAd;AACA,QAAIC,QAAJ,EAAc;AACbA,cAASC,MAAT;AACA,KAFD,MAEO;AACNC,cAASE,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B;AACA;AACD,2BAAaA,MAAb;AACA,WAAOA,MAAP;AACA;;;2BAWcK,G,EAAKC,S,EAAWP,Q,EAAU;AACxC,QAAMC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAF,WAAOK,GAAP,GAAaA,GAAb;;AAEA,QAAME,WAAW,SAAXA,QAAW,GAAW;AAC3B,4BAAaP,MAAb;AACAM,kBAAaA,WAAb;AACA,KAHD;AAIA,mBAAKN,MAAL,EAAa,MAAb,EAAqBO,QAArB;AACA,mBAAKP,MAAL,EAAa,OAAb,EAAsBO,QAAtB;;AAEA,QAAIR,QAAJ,EAAc;AACbA,cAASC,MAAT;AACA,KAFD,MAEO;AACNC,cAASE,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B;AACA;;AAED,WAAOA,MAAP;AACA;;;6BAWgBA,M,EAAQM,S,EAAWP,Q,EAAU;AAC7C,QAAMQ,WAAW,SAAXA,QAAW,GAAW;AAC3BD,kBAAaA,WAAb;AACA,KAFD;AAGA,QAAIN,OAAOQ,IAAP,IAAeR,OAAOQ,IAAP,KAAgB,iBAAnC,EAAsD;AACrD,kBAAMC,QAAN,CAAeF,QAAf;AACA;AACA;AACD,2BAAaP,MAAb;AACA,QAAIA,OAAOK,GAAX,EAAgB;AACf,YAAOR,WAAWa,OAAX,CAAmBV,OAAOK,GAA1B,EAA+BC,SAA/B,EAA0CP,QAA1C,CAAP;AACA,KAFD,MAEO;AACN,kBAAMU,QAAN,CAAeF,QAAf;AACA,YAAOV,WAAWc,GAAX,CAAeX,OAAOF,IAAtB,EAA4BC,QAA5B,CAAP;AACA;AACD;;;uCAU0Ba,O,EAASN,S,EAAWP,Q,EAAU;AACxD,QAAMc,UAAUD,QAAQE,gBAAR,CAAyB,QAAzB,CAAhB;AACA,QAAID,QAAQE,MAAZ,EAAoB;AACnBlB,gBAAWmB,iBAAX,CAA6BH,OAA7B,EAAsC,CAAtC,EAAyCP,SAAzC,EAAoDP,QAApD;AACA,KAFD,MAEO,IAAIO,SAAJ,EAAe;AACrB,kBAAMG,QAAN,CAAeH,SAAf;AACA;AACD;;;qCAWwBO,O,EAASI,K,EAAOX,S,EAAWP,Q,EAAU;AAC7DF,eAAWqB,SAAX,CACCL,QAAQM,IAAR,CAAaF,KAAb,CADD,EAEC,YAAW;AACV,SAAIA,QAAQJ,QAAQE,MAAR,GAAiB,CAA7B,EAAgC;AAC/BlB,iBAAWmB,iBAAX,CACCH,OADD,EAECI,QAAQ,CAFT,EAGCX,SAHD,EAICP,QAJD,EAD+B,CAM5B;AACH,MAPD,MAOO,IAAIO,SAAJ,EAAe;AACrB,mBAAMG,QAAN,CAAeH,SAAf;AACA;AACD,KAbF,EAcCP,QAdD;AAgBA;;;;;;mBAGaF,U","file":"node_modules/metal-dom/src/globalEval.js","sourcesContent":["'use strict';\n\nimport {async} from 'metal';\nimport {exitDocument, once} from './dom';\n\n/**\n * Utility functions for running javascript code in the global scope.\n */\nclass globalEval {\n\t/**\n\t * Evaluates the given string in the global scope.\n\t * @param {string} text\n\t * @param {function()=} appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} script\n\t */\n\tstatic run(text, appendFn) {\n\t\tconst script = document.createElement('script');\n\t\tscript.text = text;\n\t\tif (appendFn) {\n\t\t\tappendFn(script);\n\t\t} else {\n\t\t\tdocument.head.appendChild(script);\n\t\t}\n\t\texitDocument(script);\n\t\treturn script;\n\t}\n\n\t/**\n\t * Evaluates the given javascript file in the global scope.\n\t * @param {string} src The file's path.\n\t * @param {function()=} defaultFn Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} script\n\t */\n\tstatic runFile(src, defaultFn, appendFn) {\n\t\tconst script = document.createElement('script');\n\t\tscript.src = src;\n\n\t\tconst callback = function() {\n\t\t\texitDocument(script);\n\t\t\tdefaultFn && defaultFn();\n\t\t};\n\t\tonce(script, 'load', callback);\n\t\tonce(script, 'error', callback);\n\n\t\tif (appendFn) {\n\t\t\tappendFn(script);\n\t\t} else {\n\t\t\tdocument.head.appendChild(script);\n\t\t}\n\n\t\treturn script;\n\t}\n\n\t/**\n\t * Evaluates the code referenced by the given script element.\n\t * @param {!Element} script\n\t * @param {function()=} defaultFn Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} script\n\t */\n\tstatic runScript(script, defaultFn, appendFn) {\n\t\tconst callback = function() {\n\t\t\tdefaultFn && defaultFn();\n\t\t};\n\t\tif (script.type && script.type !== 'text/javascript') {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn;\n\t\t}\n\t\texitDocument(script);\n\t\tif (script.src) {\n\t\t\treturn globalEval.runFile(script.src, defaultFn, appendFn);\n\t\t} else {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn globalEval.run(script.text, appendFn);\n\t\t}\n\t}\n\n\t/**\n\t * Evaluates any script tags present in the given element.\n\t * @param {!Element} element\n\t * @param {function()=} defaultFn Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runScriptsInElement(element, defaultFn, appendFn) {\n\t\tconst scripts = element.querySelectorAll('script');\n\t\tif (scripts.length) {\n\t\t\tglobalEval.runScriptsInOrder(scripts, 0, defaultFn, appendFn);\n\t\t} else if (defaultFn) {\n\t\t\tasync.nextTick(defaultFn);\n\t\t}\n\t}\n\n\t/**\n\t * Runs the given scripts elements in the order that they appear.\n\t * @param {!NodeList} scripts\n\t * @param {number} index\n\t * @param {function()=} defaultFn Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runScriptsInOrder(scripts, index, defaultFn, appendFn) {\n\t\tglobalEval.runScript(\n\t\t\tscripts.item(index),\n\t\t\tfunction() {\n\t\t\t\tif (index < scripts.length - 1) {\n\t\t\t\t\tglobalEval.runScriptsInOrder(\n\t\t\t\t\t\tscripts,\n\t\t\t\t\t\tindex + 1,\n\t\t\t\t\t\tdefaultFn,\n\t\t\t\t\t\tappendFn\n\t\t\t\t\t); // eslint-disable-line\n\t\t\t\t} else if (defaultFn) {\n\t\t\t\t\tasync.nextTick(defaultFn);\n\t\t\t\t}\n\t\t\t},\n\t\t\tappendFn\n\t\t);\n\t}\n}\n\nexport default globalEval;\n"],"sourceRoot":"/source/"}