{"version":3,"sources":["parseFromAnchor.js"],"names":["parseFromAnchor","opt_uri","link","document","createElement","href","protocol","test","TypeError","hash","hostname","password","pathname","port","search","username"],"mappings":";AAAA;;AAEA;;;;;;;;AAIA,UAASA,eAAT,CAAyBC,OAAzB,EAAkC;AACjC,MAAIC,OAAOC,SAASC,aAAT,CAAuB,GAAvB,CAAX;AACAF,OAAKG,IAAL,GAAYJ,OAAZ;;AAEA,MAAGC,KAAKI,QAAL,KAAkB,GAAlB,IAAyB,CAAC,IAAIC,IAAJ,CAASL,KAAKG,IAAd,CAA7B,EAAkD;AACjD,SAAM,IAAIG,SAAJ,CAAiBP,OAAjB,yBAAN;AACA;;AAED,SAAO;AACNQ,SAAMP,KAAKO,IADL;AAENC,aAAUR,KAAKQ,QAFT;AAGNC,aAAUT,KAAKS,QAHT;AAINC,aAAUV,KAAKU,QAAL,CAAc,CAAd,MAAqB,GAArB,GAA2BV,KAAKU,QAAhC,GAA2C,MAAMV,KAAKU,QAJ1D;AAKNC,SAAMX,KAAKW,IALL;AAMNP,aAAUJ,KAAKI,QANT;AAONQ,WAAQZ,KAAKY,MAPP;AAQNC,aAAUb,KAAKa;AART,GAAP;AAUA;;mBAEcf,e","file":"node_modules/metal-uri/src/parseFromAnchor.js","sourcesContent":["'use strict';\n\n/**\n * Parses the given uri string into an object.\n * @param {*=} opt_uri Optional string URI to parse\n */\nfunction parseFromAnchor(opt_uri) {\n\tvar link = document.createElement('a');\n\tlink.href = opt_uri;\n\n\tif(link.protocol === ':' || !/:/.test(link.href)) {\n\t\tthrow new TypeError(`${opt_uri} is not a valid URL`);\n\t}\n\n\treturn {\n\t\thash: link.hash,\n\t\thostname: link.hostname,\n\t\tpassword: link.password,\n\t\tpathname: link.pathname[0] === '/' ? link.pathname : '/' + link.pathname,\n\t\tport: link.port,\n\t\tprotocol: link.protocol,\n\t\tsearch: link.search,\n\t\tusername: link.username\n\t};\n}\n\nexport default parseFromAnchor;\n"],"sourceRoot":"/source/"}