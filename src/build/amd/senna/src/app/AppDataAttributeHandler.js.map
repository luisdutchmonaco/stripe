{"version":3,"sources":["AppDataAttributeHandler.js"],"names":["AppDataAttributeHandler","app","baseElement","Error","hasAttribute","senna","console","log","maybeAddRoutes_","maybeAddSurfaces_","maybeSetBasePath_","maybeSetLinkSelector_","maybeSetLoadingCssClass_","maybeSetUpdateScrollPosition_","maybeDispatch_","dispose","routesSelector","querySelectorAllAsArray_","forEach","link","maybeParseLinkRoute_","hasRoutes","addRoutes","surfacesSelector","surface","surfaceElement","updateElementIdIfSpecialSurface_","addSurfaces","id","dispatch","route","maybeParseLinkRoutePath_","maybeParseLinkRouteHandler_","getPath","handler","getAttribute","getObjectByName","path","indexOf","RegExp","substring","basePath","setBasePath","linkSelector","setLinkSelector","loadingCssClass","setLoadingCssClass","updateScrollPosition","setUpdateScrollPosition","selector","Array","prototype","slice","call","document","querySelectorAll","element","body"],"mappings":"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","file":"src/app/AppDataAttributeHandler.js","sourcesContent":["'use strict';\n\nimport { Disposable, getUid, isDefAndNotNull, isElement, object } from 'metal';\nimport dataAttributes from './dataAttributes';\nimport globals from '../globals/globals';\nimport App from './App';\nimport HtmlScreen from '../screen/HtmlScreen';\nimport Route from '../route/Route';\n\nclass AppDataAttributeHandler extends Disposable {\n\n\t/**\n\t * Initilizes App, register surfaces and routes from data attributes.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the app reference initialized by data attributes.\n\t\t * @type {App}\n\t\t * @default null\n\t\t */\n\t\tthis.app = null;\n\n\t\t/**\n\t\t * Holds the base element to search initialization data attributes. This\n\t\t * element is the container used to enable initialization based on the\n\t\t * presence of `data-senna` attribute.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t */\n\t\tthis.baseElement = null;\n\t}\n\n\t/**\n\t * Inits application based on information scanned from document.\n\t */\n\thandle() {\n\t\tif (!isElement(this.baseElement)) {\n\t\t\tthrow new Error('Senna data attribute handler base element ' +\n\t\t\t\t'not set or invalid, try setting a valid element that ' +\n\t\t\t\t'contains a `data-senna` attribute.');\n\t\t}\n\n\t\tif (!this.baseElement.hasAttribute(dataAttributes.senna)) {\n\t\t\tconsole.log('Senna was not initialized from data attributes. ' +\n\t\t\t\t'In order to enable its usage from data attributes try setting ' +\n\t\t\t\t'in the base element, e.g. `<body data-senna>`.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.app) {\n\t\t\tthrow new Error('Senna app was already initialized.');\n\t\t}\n\n\t\tconsole.log('Senna initialized from data attribute.');\n\n\t\tthis.app = new App();\n\t\tthis.maybeAddRoutes_();\n\t\tthis.maybeAddSurfaces_();\n\t\tthis.maybeSetBasePath_();\n\t\tthis.maybeSetLinkSelector_();\n\t\tthis.maybeSetLoadingCssClass_();\n\t\tthis.maybeSetUpdateScrollPosition_();\n\t\tthis.maybeDispatch_();\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tif (this.app) {\n\t\t\tthis.app.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the app reference.\n\t * @return {App}\n\t */\n\tgetApp() {\n\t\treturn this.app;\n\t}\n\n\t/**\n\t * Gets the base element.\n\t * @return {Element} baseElement\n\t */\n\tgetBaseElement() {\n\t\treturn this.baseElement;\n\t}\n\n\t/**\n\t * Maybe adds app routes from link elements that are `senna-route`.\n\t */\n\tmaybeAddRoutes_() {\n\t\tvar routesSelector = 'link[rel=\"senna-route\"]';\n\t\tthis.querySelectorAllAsArray_(routesSelector).forEach((link) => this.maybeParseLinkRoute_(link));\n\t\tif (!this.app.hasRoutes()) {\n\t\t\tthis.app.addRoutes(new Route(/.*/, HtmlScreen));\n\t\t\tconsole.log('Senna can\\'t find route elements, adding default.');\n\t\t}\n\t}\n\n\t/**\n\t * Maybe adds app surfaces by scanning `data-senna-surface` data attribute.\n\t */\n\tmaybeAddSurfaces_() {\n\t\tvar surfacesSelector = '[' + dataAttributes.surface + ']';\n\t\tthis.querySelectorAllAsArray_(surfacesSelector).forEach((surfaceElement) => {\n\t\t\tthis.updateElementIdIfSpecialSurface_(surfaceElement);\n\t\t\tthis.app.addSurfaces(surfaceElement.id);\n\t\t});\n\t}\n\n\t/**\n\t * Dispatches app navigation to the current path when initializes.\n\t */\n\tmaybeDispatch_() {\n\t\tif (this.baseElement.hasAttribute(dataAttributes.dispatch)) {\n\t\t\tthis.app.dispatch();\n\t\t}\n\t}\n\n\t/**\n\t * Adds app route by parsing valid link elements. A valid link element is of\n\t * the kind `rel=\"senna-route\"`.\n\t * @param {Element} link\n\t */\n\tmaybeParseLinkRoute_(link) {\n\t\tvar route = new Route(this.maybeParseLinkRoutePath_(link), this.maybeParseLinkRouteHandler_(link));\n\t\tthis.app.addRoutes(route);\n\t\tconsole.log('Senna scanned route ' + route.getPath());\n\t}\n\n\t/**\n\t * Maybe parse link route handler.\n\t * @param {Element} link\n\t * @return {?string}\n\t */\n\tmaybeParseLinkRouteHandler_(link) {\n\t\tvar handler = link.getAttribute('type');\n\t\tif (isDefAndNotNull(handler)) {\n\t\t\thandler = object.getObjectByName(handler);\n\t\t}\n\t\treturn handler;\n\t}\n\n\t/**\n\t * Maybe parse link route path.\n\t * @param {Element} link\n\t * @return {?string}\n\t */\n\tmaybeParseLinkRoutePath_(link) {\n\t\tvar path = link.getAttribute('href');\n\t\tif (isDefAndNotNull(path)) {\n\t\t\tif (path.indexOf('regex:') === 0) {\n\t\t\t\tpath = new RegExp(path.substring(6));\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Maybe sets app base path from `data-senna-base-path` data attribute.\n\t */\n\tmaybeSetBasePath_() {\n\t\tvar basePath = this.baseElement.getAttribute(dataAttributes.basePath);\n\t\tif (isDefAndNotNull(basePath)) {\n\t\t\tthis.app.setBasePath(basePath);\n\t\t\tconsole.log('Senna scanned base path ' + basePath);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app link selector from `data-senna-link-selector` data\n\t * attribute.\n\t */\n\tmaybeSetLinkSelector_() {\n\t\tvar linkSelector = this.baseElement.getAttribute(dataAttributes.linkSelector);\n\t\tif (isDefAndNotNull(linkSelector)) {\n\t\t\tthis.app.setLinkSelector(linkSelector);\n\t\t\tconsole.log('Senna scanned link selector ' + linkSelector);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app link loading css class from `data-senna-loading-css-class`\n\t * data attribute.\n\t */\n\tmaybeSetLoadingCssClass_() {\n\t\tvar loadingCssClass = this.baseElement.getAttribute(dataAttributes.loadingCssClass);\n\t\tif (isDefAndNotNull(loadingCssClass)) {\n\t\t\tthis.app.setLoadingCssClass(loadingCssClass);\n\t\t\tconsole.log('Senna scanned loading css class ' + loadingCssClass);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app update scroll position from\n\t * `data-senna-update-scroll-position` data attribute.\n\t */\n\tmaybeSetUpdateScrollPosition_() {\n\t\tvar updateScrollPosition = this.baseElement.getAttribute(dataAttributes.updateScrollPosition);\n\t\tif (isDefAndNotNull(updateScrollPosition)) {\n\t\t\tif (updateScrollPosition === 'false') {\n\t\t\t\tthis.app.setUpdateScrollPosition(false);\n\t\t\t} else {\n\t\t\t\tthis.app.setUpdateScrollPosition(true);\n\t\t\t}\n\t\t\tconsole.log('Senna scanned update scroll position ' + updateScrollPosition);\n\t\t}\n\t}\n\n\t/**\n\t * Queries elements from document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tquerySelectorAllAsArray_(selector) {\n\t\treturn Array.prototype.slice.call(globals.document.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Updates element id if handled as special surface element. Some surfaces\n\t * are slightly different from others, like when threating <code>body</code>\n\t * as surface.\n\t * @param {Element} element\n\t */\n\tupdateElementIdIfSpecialSurface_(element) {\n\t\tif (!element.id && element === globals.document.body) {\n\t\t\telement.id = 'senna_surface_' + getUid();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the base element.\n\t * @param {Element} baseElement\n\t */\n\tsetBaseElement(baseElement) {\n\t\tthis.baseElement = baseElement;\n\t}\n\n}\n\nexport default AppDataAttributeHandler;\n"],"sourceRoot":"/source/"}